<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
>

<!-- 加载配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:local.properties</value>
                <!-- value>classpath:c3p0.properties</value-->
            </list>
        </property>
    </bean>
<tx:annotation-driven transaction-manager="transactionManager"/>
<context:annotation-config></context:annotation-config>
<context:component-scan base-package="org.hao" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
<!-- 注册视图解析器，说白了就是根据返回值指定到某个页面 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/"></property> <!--页面文件的路径，在根目录下 -->
		<property name="suffix" value=".jsp"/>
	</bean>
 <!-- 配置数据源 -->
    <bean id="readDataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl">
            <value><![CDATA[jdbc:mysql://${db.read.host}:${db.read.port}/${db.read.database}?useUnicode=true&characterEncoding=utf-8]]></value>
        </property>
        <property name="user"               value="${db.read.userName}" />
        <property name="password"           value="${db.read.password}" />
        <property name="maxPoolSize"        value="20" />
        <property name="minPoolSize"        value="1" />
        <property name="maxStatements"      value="100" />
        <property name="initialPoolSize"    value="3" />
        <property name="maxIdleTime"        value="1800"/>
        <property name="idleConnectionTestPeriod"   value="10" />
        <property name="testConnectionOnCheckin"    value="true" />
        <property name="testConnectionOnCheckout"   value="false" />
        <property name="preferredTestQuery"         value="SELECT 1 FROM DUAL" />
    </bean>

    
    <bean id="readSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="readDataSource" />
		<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
	</bean>
    <bean id="readSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="readSqlSessionFactory" />
	</bean>

    <!-- 配置数据源（主库） -->
    <bean id="writeDataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl">
            <value><![CDATA[jdbc:mysql://${db.write.host}:${db.write.port}/${db.write.database}?useUnicode=true&characterEncoding=utf-8]]></value>
        </property>
        <property name="user"               value="${db.write.userName}" />
        <property name="password"           value="${db.write.password}" />
        <property name="maxPoolSize"        value="20" />
        <property name="minPoolSize"        value="1" />
        <property name="maxStatements"      value="100" />
        <property name="initialPoolSize"    value="3" />
        <property name="maxIdleTime"        value="1800"/>
        <property name="idleConnectionTestPeriod"   value="10" />
        <property name="testConnectionOnCheckin"    value="true" />
        <property name="testConnectionOnCheckout"   value="false" />
        <property name="preferredTestQuery"         value="SELECT 1 FROM DUAL" />
    </bean>  

    <!-- 配置写的ibatis （主库）-->
    <bean id="writerSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="writeDataSource" />
		<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
	</bean>
    
    <bean id="writerSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="writerSqlSessionFactory" />
	</bean>
    
    <!-- bean id="robotDao" class="org.hao.dao.IRobotDao" parent="baseDao">
    	<property name="readSqlSession"><ref bean="readSqlSession"/></property>
    	<property name="writerSqlSession"><ref bean="writerSqlSession"/></property>
    </bean-->
    
    
    
     <!-- 事务控制 （主库）-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="writeDataSource" />
	</bean>
</beans>